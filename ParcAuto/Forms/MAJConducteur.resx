<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClear.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>